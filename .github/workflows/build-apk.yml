name: Build APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-8-jdk python3-pip autoconf libtool \
          pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev \
          libtinfo6 cmake libffi-dev libssl-dev build-essential \
          libltdl-dev ccache

    - name: Set up Java environment
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV
        echo "/usr/lib/jvm/java-8-openjdk-amd64/bin" >> $GITHUB_PATH

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.28
        pip install kivy[base] requests pillow plyer

    - name: Pre-accept Android SDK licenses
      run: |
        mkdir -p $HOME/.android
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $HOME/.android/repositories.cfg
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> $HOME/.android/repositories.cfg

    - name: Cache buildozer global directory
      uses: actions/cache@v4
      with:
        path: ~/.buildozer
        key: ${{ runner.os }}-buildozer-global-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-global-

    - name: Cache buildozer directory
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-

    - name: Set environment variables for license acceptance
      run: |
        echo "ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV

    - name: Build APK with Buildozer
      run: |
        # Accept licenses non-interactively
        export BUILDOZER_ACCEPT_ANDROID_SDK_LICENSE=1
        yes | buildozer android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: freevia-debug-apk
        path: bin/*.apk

    - name: List build outputs
      run: |
        echo "Build completed successfully!"
        echo "Generated files:"
        ls -la bin/
        
    - name: Create Release (if on main/master branch)
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Freevia APK v${{ github.run_number }}
        body: |
          Automated APK build from commit ${{ github.sha }}
          
          **Download the APK:**
          - freevia-debug.apk - Ready to install on Android devices
          
          **Features:**
          - User registration and login
          - Item sharing with photos and location
          - Interactive map with GPS
          - Profile management
          - iOS-style UI design
        files: bin/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}